
/**
* DBHandlerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DBHandler.idl
* Thursday, August 16, 2018 8:09:52 o'clock PM PDT
*/

public abstract class DBHandlerPOA extends org.omg.PortableServer.Servant
 implements DBHandlerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("addClient", new java.lang.Integer (0));
    _methods.put ("clientExist", new java.lang.Integer (1));
    _methods.put ("updateIPAddress", new java.lang.Integer (2));
    _methods.put ("updatePort", new java.lang.Integer (3));
    _methods.put ("shareFile", new java.lang.Integer (4));
    _methods.put ("removeFile", new java.lang.Integer (5));
    _methods.put ("isShared", new java.lang.Integer (6));
    _methods.put ("fileExist", new java.lang.Integer (7));
    _methods.put ("search", new java.lang.Integer (8));
    _methods.put ("downloadFile", new java.lang.Integer (9));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // DBHandler/addClient
       {
         String mac = in.read_string ();
         String ipAddress = in.read_string ();
         int port = in.read_long ();
         this.addClient (mac, ipAddress, port);
         out = $rh.createReply();
         break;
       }

       case 1:  // DBHandler/clientExist
       {
         String mac = in.read_string ();
         boolean $result = false;
         $result = this.clientExist (mac);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // DBHandler/updateIPAddress
       {
         String mac = in.read_string ();
         String ipAddress = in.read_string ();
         this.updateIPAddress (mac, ipAddress);
         out = $rh.createReply();
         break;
       }

       case 3:  // DBHandler/updatePort
       {
         String mac = in.read_string ();
         int port = in.read_long ();
         this.updatePort (mac, port);
         out = $rh.createReply();
         break;
       }

       case 4:  // DBHandler/shareFile
       {
         String filename = in.read_string ();
         String fsize = in.read_string ();
         String mac = in.read_string ();
         this.shareFile (filename, fsize, mac);
         out = $rh.createReply();
         break;
       }

       case 5:  // DBHandler/removeFile
       {
         String filename = in.read_string ();
         String mac = in.read_string ();
         this.removeFile (filename, mac);
         out = $rh.createReply();
         break;
       }

       case 6:  // DBHandler/isShared
       {
         String filename = in.read_string ();
         String mac = in.read_string ();
         boolean $result = false;
         $result = this.isShared (filename, mac);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // DBHandler/fileExist
       {
         String filename = in.read_string ();
         String mac = in.read_string ();
         boolean $result = false;
         $result = this.fileExist (filename, mac);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 8:  // DBHandler/search
       {
         String filename = in.read_string ();
         String mac = in.read_string ();
         String $result = null;
         $result = this.search (filename, mac);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // DBHandler/downloadFile
       {
         String filename = in.read_string ();
         String mac = in.read_string ();
         String $result = null;
         $result = this.downloadFile (filename, mac);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DBHandler:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public DBHandler _this() 
  {
    return DBHandlerHelper.narrow(
    super._this_object());
  }

  public DBHandler _this(org.omg.CORBA.ORB orb) 
  {
    return DBHandlerHelper.narrow(
    super._this_object(orb));
  }


} // class DBHandlerPOA
